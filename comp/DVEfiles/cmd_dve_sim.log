ucliGUI::start /home/SIBIZAPPS/sdimitrov/Projects/lampTest/comp/simv -ucligui +v2k
set ucliGUI::state
set ucliGUI::state
ucliCore::getToolPID
synopsys::env hasTB
trigger_hier_stack_context_switch 0
synopsys::xml set_array_limit <data limit="50" />
synopsys::xml set_depth_limit <data limit="100" />
synopsys::xml set_string_limit <data limit="1000" />
synopsys::xml set_only_active_frame <data value="1" />
synopsys::xml set_variable_frame_id <data value="1" />
synUtils::setDVEInitPhase 1
synopsys::dump -type VPD -file /home/SIBIZAPPS/sdimitrov/Projects/lampTest/comp/inter.vpd -locking
synopsys::dump -autoflush on -fid VPD1
set ::dve_fid VPD1
synUtils::setDVEInitPhase 0
ucliCore::getToolPID
synUtils::sendTool -active _icl_setToolSocket /tmp/smlnpLMBYou
synUtils::sendTool -active {_icl_start_rpc -version "I-2014.03_Full64" -sync_file /tmp/vcs_dve_rpc.sdimitrov.17064}
synUtils::sendTool -active {_icl_createSharedMemory /tmp/vcs_dve_general.sdimitrov.17064}
config endofsim noexit
config onfail enable all
config syscaddplainmembers
config syscaddsourcenames
config syscaddstructtypes
synopsys::listing -disable
# Begin_DVE_Session_Save_Info
# DVE restart session
# Saved on Thu Jul 27 17:22:31 2017
# Designs open: 1
#   Sim: /home/SIBIZAPPS/sdimitrov/Projects/lampTest/comp/simv
# Toplevel windows open: 2
# 	TopLevel.1
# 	TopLevel.2
#   Source.1: uvm_pkg
#   Wave.1: 11 signals
#   Group count = 2
#   Group top signal count = 2
#   Group DUT signal count = 11
# End_DVE_Session_Save_Info
# DVE version: I-2014.03_Full64
# DVE build date: Feb 27 2014 20:44:00
#<Session mode="Restart" path=".restartSimSession.tcl" type="Debug">
# Application preferences
#<WindowLayout>
# DVE top-level session
# Create and position top-level window: TopLevel.1
set TopLevel.1 TopLevel.1
# Docked window settings
# MDI window settings
set Console.1 Console.1
set HSPane.1 HSPane.1
set Hier.1 Hier.1
set Stack.1 Stack.1
set Class.1 Class.1
set Object.1 Object.1
set DLPane.1 DLPane.1
set Data.1 Data.1
set Local.1 Local.1
set Member.1 Member.1
set Source.1 Source.1
# End MDI window settings
# Create and position top-level window: TopLevel.2
set TopLevel.2 TopLevel.2
# Docked window settings
# MDI window settings
set Wave.1 Wave.1
# End MDI window settings
#</WindowLayout>
#<Database>
#</Database>
# DVE Global setting session:
# Global: Breakpoints
# Global: Bus
# Global: Expressions
# Global: Signal Time Shift
# Global: Signal Compare
# Global: Signal Groups
set _session_group_1 top
set top "$_session_group_1"
set _session_group_2 DUT
set DUT "$_session_group_2"
# Global: Highlighting
# Global: Stack
# Post database loading setting...
# Restore C1 time
# Save global setting...
# Wave/List view global setting
# Close all empty TopLevel windows
foreach __top [gui_ekki_get_window_ids -type TopLevel] {     if { [llength [gui_ekki_get_window_ids -parent $__top]] == 0} {         gui_close_window -window $__top     } }
# DVE View/pane content session:
# Hier 'Hier.1'
catch {gui_list_expand -id ${Hier.1} top}
catch {gui_list_select -id ${Hier.1} {top.DUT}}
# Class 'Class.1'
# Member 'Member.1'
# Data 'Data.1'
# Source 'Source.1'
ucliGUI::vpdAddHierarchy -scope uvm_pkg -depth 1 -file /home/SIBIZAPPS/sdimitrov/Projects/lampTest/comp/inter.vpd; synopsys::dump -flush VPD1
# Warning: Class view not found.
# View 'Wave.1'
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
set origGroupCreationState [gui_list_create_group_when_add -wave]
synopsys::dump -add {top.DUT.clk top.DUT.count top.DUT.cs top.DUT.next top.DUT.rst top.DUT.s1 top.DUT.s2 top.DUT.s3 top.DUT.state top.DUT.x1 top.DUT.x2 } -aggregates  -fid VPD1
if {$origGroupCreationState} { 	gui_list_create_group_when_add -wave -enable }
if { $groupExD } {  gui_msg_report -code DVWW028 }
# Restore toplevel window zorder
# The toplevel window could be closed if it has no view/pane
if {[gui_exist_window -window ${TopLevel.1}]} { 	gui_set_active_window -window ${TopLevel.1} 	gui_set_active_window -window ${HSPane.1} }
if {[gui_exist_window -window ${TopLevel.2}]} { 	gui_set_active_window -window ${TopLevel.2} 	gui_set_active_window -window ${Wave.1} }
#</Session>
synopsys::run
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
synopsys::xml {frames <data updateType="preserve" itemId="none" viewId="Stack.1" />}
if [catch {gui_sim_terminate}] {gui_sim_terminate -kill}
synopsys::finish
set ucliGUI::state
set ucliGUI::state
ucli_exit
